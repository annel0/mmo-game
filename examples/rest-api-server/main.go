package main

import (
	"fmt"
	"log"
	"math/rand"
	"os"
	"os/signal"
	"syscall"
	"time"

	"github.com/annel0/mmo-game/internal/api"
	"github.com/annel0/mmo-game/internal/auth"
	"github.com/annel0/mmo-game/internal/network"
	"github.com/annel0/mmo-game/internal/world/entity"
)

// simulateGameEvents —Å–∏–º—É–ª–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∏–≥—Ä–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ webhook'–æ–≤
func simulateGameEvents(webhookManager *api.OutboundWebhookManager) {
	ticker := time.NewTicker(30 * time.Second) // –°–æ–±—ã—Ç–∏—è –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
	defer ticker.Stop()

	players := []string{"player1", "player2", "player3", "hacker_user", "speedrunner"}
	violations := []string{"speed_hack", "fly_hack", "x-ray", "auto_clicker", "kill_aura"}

	for {
		select {
		case <-ticker.C:
			// –°–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è
			eventType := rand.Intn(5)

			switch eventType {
			case 0:
				// –ò–≥—Ä–æ–∫ –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è
				player := players[rand.Intn(len(players))]
				webhookManager.SendEvent("player.joined", map[string]interface{}{
					"username": player,
					"ip":       "192.168.1." + fmt.Sprintf("%d", rand.Intn(254)+1),
					"time":     time.Now().Unix(),
				})

			case 1:
				// –ò–≥—Ä–æ–∫ –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä
				player := players[rand.Intn(len(players))]
				webhookManager.SendEvent("player.left", map[string]interface{}{
					"username": player,
					"time":     time.Now().Unix(),
					"reason":   "disconnect",
				})

			case 2:
				// –ù–∞—Ä—É—à–µ–Ω–∏–µ –∞–Ω—Ç–∏—á–∏—Ç–∞
				player := players[rand.Intn(len(players))]
				violation := violations[rand.Intn(len(violations))]
				webhookManager.SendEvent("anticheat.violation", map[string]interface{}{
					"username":       player,
					"violation_type": violation,
					"severity":       rand.Intn(10) + 1,
					"details":        "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ —Å–∏—Å—Ç–µ–º–æ–π –∞–Ω—Ç–∏—á–∏—Ç–∞",
					"time":           time.Now().Unix(),
				})

			case 3:
				// –í—ã—Å–æ–∫–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞ CPU
				webhookManager.SendEvent("server.high_cpu", map[string]interface{}{
					"cpu_percent": rand.Float64()*20 + 80, // 80-100%
					"duration":    rand.Intn(300) + 60,    // 1-5 –º–∏–Ω—É—Ç
					"alert_level": "warning",
				})

			case 4:
				// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–∏—Ä–∞
				webhookManager.SendEvent("world.saved", map[string]interface{}{
					"save_duration_ms": rand.Intn(5000) + 1000, // 1-6 —Å–µ–∫—É–Ω–¥
					"chunks_saved":     rand.Intn(1000) + 500,
					"backup_created":   rand.Intn(2) == 1, // —Å–ª—É—á–∞–π–Ω–æ true/false
				})
			}
		}
	}
}

// –ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ REST API + –∏–≥—Ä–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
func main() {
	log.Println("üéÆ –ó–∞–ø—É—Å–∫ MMO Game Server —Å REST API...")

	// –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä —Å—É—â–Ω–æ—Å—Ç–µ–π
	entityManager := entity.NewEntityManager()
	entityManager.RegisterDefaultBehaviors()

	// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è REST API + MariaDB
	apiConfig := api.IntegrationConfig{
		RestPort: ":8088",
		MariaConfig: auth.MariaConfig{
			Host:     "localhost",
			Port:     3306,
			Database: "blockverse",
			Username: "gameuser",    // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
			Password: "gamepass123", // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
		},
		EntityManager: entityManager,
		UseMariaDB:    true, // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ true –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è MariaDB
	}

	// –°–æ–∑–¥–∞–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é REST API
	apiIntegration, err := api.NewServerIntegration(apiConfig)
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è REST API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: %v", err)
	}

	// –ó–∞–ø—É—Å–∫–∞–µ–º REST API —Å–µ—Ä–≤–µ—Ä
	if err := apiIntegration.Start(); err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ REST API: %v", err)
	}

	// –°–æ–∑–¥–∞–µ–º –∏–≥—Ä–æ–≤–æ–π —Å–µ—Ä–≤–µ—Ä (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
	gameServer, err := network.NewGameServerPB(":7777", ":7778")
	if err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: %v", err)
	}

	// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—Ç –∂–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–≥—Ä–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
	_ = apiIntegration.GetUserRepository()
	log.Printf("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–±—â–∏–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∏–≥—Ä—ã –∏ REST API")

	// –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –º–µ–Ω–µ–¥–∂–µ—Ä—É –∏—Å—Ö–æ–¥—è—â–∏—Ö webhook'–æ–≤
	webhookManager := apiIntegration.GetOutboundWebhooks()

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
	webhookManager.SendEvent("server.started", map[string]interface{}{
		"version":      "v0.0.2a",
		"environment":  "development",
		"startup_time": time.Now().Unix(),
		"features":     []string{"rest_api", "mariadb", "webhooks"},
	})

	// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏–º—É–ª—è—Ü–∏—é –∏–≥—Ä–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π
	go simulateGameEvents(webhookManager)

	// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä–æ–≤–æ–π —Å–µ—Ä–≤–µ—Ä
	go func() {
		if err := gameServer.Start(); err != nil {
			log.Printf("‚ùå –û—à–∏–±–∫–∞ –∏–≥—Ä–æ–≤–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞: %v", err)
		}
	}()

	log.Println("–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
	log.Println("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:")
	log.Println("   üéÆ –ò–≥—Ä–æ–≤–æ–π —Å–µ—Ä–≤–µ—Ä: TCP :7777, UDP :7778")
	log.Println("   üåê REST API: http://localhost:8088")
	log.Println("   ‚ù§Ô∏è  Health check: http://localhost:8088/health")

	// –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è REST API
	log.Println("\nüí° –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è REST API:")
	log.Println("   curl http://localhost:8088/health")
	log.Println("   curl -X POST http://localhost:8088/api/auth/login -H 'Content-Type: application/json' -d '{\"username\":\"admin\",\"password\":\"ChangeMe123!\"}'")
	log.Println("   curl -H 'Authorization: Bearer YOUR_JWT_TOKEN' http://localhost:8088/api/stats")

	// –û–∂–∏–¥–∞–µ–º —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
	quit := make(chan os.Signal, 1)
	signal.Notify(quit, syscall.SIGINT, syscall.SIGTERM)
	<-quit

	log.Println("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è...")

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ–± –æ—Å—Ç–∞–Ω–æ–≤–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
	webhookManager.SendEvent("server.stopped", map[string]interface{}{
		"shutdown_time": time.Now().Unix(),
		"reason":        "manual_shutdown",
	})

	// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
	if err := apiIntegration.Stop(); err != nil {
		log.Printf("‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ REST API: %v", err)
	}

	gameServer.Stop()

	log.Println("üëã –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
}
