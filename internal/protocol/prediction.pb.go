// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: prediction.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Типы клиентского ввода
type ClientInputType int32

const (
	ClientInputType_INPUT_UNKNOWN  ClientInputType = 0
	ClientInputType_INPUT_MOVE     ClientInputType = 1
	ClientInputType_INPUT_INTERACT ClientInputType = 2
	ClientInputType_INPUT_ATTACK   ClientInputType = 3
	ClientInputType_INPUT_USE_ITEM ClientInputType = 4
	ClientInputType_INPUT_BUILD    ClientInputType = 5
	ClientInputType_INPUT_CHAT     ClientInputType = 6
	ClientInputType_INPUT_EMOTE    ClientInputType = 7
)

// Enum value maps for ClientInputType.
var (
	ClientInputType_name = map[int32]string{
		0: "INPUT_UNKNOWN",
		1: "INPUT_MOVE",
		2: "INPUT_INTERACT",
		3: "INPUT_ATTACK",
		4: "INPUT_USE_ITEM",
		5: "INPUT_BUILD",
		6: "INPUT_CHAT",
		7: "INPUT_EMOTE",
	}
	ClientInputType_value = map[string]int32{
		"INPUT_UNKNOWN":  0,
		"INPUT_MOVE":     1,
		"INPUT_INTERACT": 2,
		"INPUT_ATTACK":   3,
		"INPUT_USE_ITEM": 4,
		"INPUT_BUILD":    5,
		"INPUT_CHAT":     6,
		"INPUT_EMOTE":    7,
	}
)

func (x ClientInputType) Enum() *ClientInputType {
	p := new(ClientInputType)
	*p = x
	return p
}

func (x ClientInputType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientInputType) Descriptor() protoreflect.EnumDescriptor {
	return file_prediction_proto_enumTypes[0].Descriptor()
}

func (ClientInputType) Type() protoreflect.EnumType {
	return &file_prediction_proto_enumTypes[0]
}

func (x ClientInputType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientInputType.Descriptor instead.
func (ClientInputType) EnumDescriptor() ([]byte, []int) {
	return file_prediction_proto_rawDescGZIP(), []int{0}
}

// Клиентский ввод для prediction
type ClientInputMessage struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	InputId         uint32                 `protobuf:"varint,1,opt,name=input_id,json=inputId,proto3" json:"input_id,omitempty"`                         // Уникальный ID ввода
	ClientTimestamp int64                  `protobuf:"varint,2,opt,name=client_timestamp,json=clientTimestamp,proto3" json:"client_timestamp,omitempty"` // Время ввода на клиенте (мс)
	InputType       ClientInputType        `protobuf:"varint,3,opt,name=input_type,json=inputType,proto3,enum=protocol.ClientInputType" json:"input_type,omitempty"`
	// Данные ввода
	MoveDirection  *Vec2         `protobuf:"bytes,4,opt,name=move_direction,json=moveDirection,proto3,oneof" json:"move_direction,omitempty"`       // Для INPUT_MOVE
	TargetPosition *Vec2         `protobuf:"bytes,5,opt,name=target_position,json=targetPosition,proto3,oneof" json:"target_position,omitempty"`    // Позиция цели для взаимодействий
	TargetEntityId *uint64       `protobuf:"varint,6,opt,name=target_entity_id,json=targetEntityId,proto3,oneof" json:"target_entity_id,omitempty"` // ID целевой сущности
	ItemId         *uint32       `protobuf:"varint,7,opt,name=item_id,json=itemId,proto3,oneof" json:"item_id,omitempty"`                           // ID предмета
	Params         *JsonMetadata `protobuf:"bytes,8,opt,name=params,proto3" json:"params,omitempty"`                                                // Дополнительные параметры
	// Данные для prediction
	PredictedPosition *Vec2      `protobuf:"bytes,9,opt,name=predicted_position,json=predictedPosition,proto3" json:"predicted_position,omitempty"`  // Предсказанная позиция игрока
	PredictedVelocity *Vec2Float `protobuf:"bytes,10,opt,name=predicted_velocity,json=predictedVelocity,proto3" json:"predicted_velocity,omitempty"` // Предсказанная скорость
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ClientInputMessage) Reset() {
	*x = ClientInputMessage{}
	mi := &file_prediction_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientInputMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInputMessage) ProtoMessage() {}

func (x *ClientInputMessage) ProtoReflect() protoreflect.Message {
	mi := &file_prediction_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInputMessage.ProtoReflect.Descriptor instead.
func (*ClientInputMessage) Descriptor() ([]byte, []int) {
	return file_prediction_proto_rawDescGZIP(), []int{0}
}

func (x *ClientInputMessage) GetInputId() uint32 {
	if x != nil {
		return x.InputId
	}
	return 0
}

func (x *ClientInputMessage) GetClientTimestamp() int64 {
	if x != nil {
		return x.ClientTimestamp
	}
	return 0
}

func (x *ClientInputMessage) GetInputType() ClientInputType {
	if x != nil {
		return x.InputType
	}
	return ClientInputType_INPUT_UNKNOWN
}

func (x *ClientInputMessage) GetMoveDirection() *Vec2 {
	if x != nil {
		return x.MoveDirection
	}
	return nil
}

func (x *ClientInputMessage) GetTargetPosition() *Vec2 {
	if x != nil {
		return x.TargetPosition
	}
	return nil
}

func (x *ClientInputMessage) GetTargetEntityId() uint64 {
	if x != nil && x.TargetEntityId != nil {
		return *x.TargetEntityId
	}
	return 0
}

func (x *ClientInputMessage) GetItemId() uint32 {
	if x != nil && x.ItemId != nil {
		return *x.ItemId
	}
	return 0
}

func (x *ClientInputMessage) GetParams() *JsonMetadata {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *ClientInputMessage) GetPredictedPosition() *Vec2 {
	if x != nil {
		return x.PredictedPosition
	}
	return nil
}

func (x *ClientInputMessage) GetPredictedVelocity() *Vec2Float {
	if x != nil {
		return x.PredictedVelocity
	}
	return nil
}

// Снимок состояния мира
type WorldSnapshotMessage struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SnapshotId         uint32                 `protobuf:"varint,1,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`                           // ID снимка
	ServerTimestamp    int64                  `protobuf:"varint,2,opt,name=server_timestamp,json=serverTimestamp,proto3" json:"server_timestamp,omitempty"`            // Время снимка на сервере (мс)
	LastProcessedInput uint32                 `protobuf:"varint,3,opt,name=last_processed_input,json=lastProcessedInput,proto3" json:"last_processed_input,omitempty"` // Последний обработанный input_id
	// Состояние игрока-получателя
	PlayerState *EntityData `protobuf:"bytes,4,opt,name=player_state,json=playerState,proto3" json:"player_state,omitempty"`
	// Состояние других сущностей в видимой области
	VisibleEntities []*EntityData `protobuf:"bytes,5,rep,name=visible_entities,json=visibleEntities,proto3" json:"visible_entities,omitempty"`
	// Дельта изменений блоков (если есть)
	BlockDeltas []*BlockDelta `protobuf:"bytes,6,rep,name=block_deltas,json=blockDeltas,proto3" json:"block_deltas,omitempty"`
	// Metadata для отладки
	ServerTickrate *float32 `protobuf:"fixed32,7,opt,name=server_tickrate,json=serverTickrate,proto3,oneof" json:"server_tickrate,omitempty"` // Частота обновлений сервера
	EntitiesTotal  *int32   `protobuf:"varint,8,opt,name=entities_total,json=entitiesTotal,proto3,oneof" json:"entities_total,omitempty"`     // Общее количество сущностей
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WorldSnapshotMessage) Reset() {
	*x = WorldSnapshotMessage{}
	mi := &file_prediction_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorldSnapshotMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldSnapshotMessage) ProtoMessage() {}

func (x *WorldSnapshotMessage) ProtoReflect() protoreflect.Message {
	mi := &file_prediction_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldSnapshotMessage.ProtoReflect.Descriptor instead.
func (*WorldSnapshotMessage) Descriptor() ([]byte, []int) {
	return file_prediction_proto_rawDescGZIP(), []int{1}
}

func (x *WorldSnapshotMessage) GetSnapshotId() uint32 {
	if x != nil {
		return x.SnapshotId
	}
	return 0
}

func (x *WorldSnapshotMessage) GetServerTimestamp() int64 {
	if x != nil {
		return x.ServerTimestamp
	}
	return 0
}

func (x *WorldSnapshotMessage) GetLastProcessedInput() uint32 {
	if x != nil {
		return x.LastProcessedInput
	}
	return 0
}

func (x *WorldSnapshotMessage) GetPlayerState() *EntityData {
	if x != nil {
		return x.PlayerState
	}
	return nil
}

func (x *WorldSnapshotMessage) GetVisibleEntities() []*EntityData {
	if x != nil {
		return x.VisibleEntities
	}
	return nil
}

func (x *WorldSnapshotMessage) GetBlockDeltas() []*BlockDelta {
	if x != nil {
		return x.BlockDeltas
	}
	return nil
}

func (x *WorldSnapshotMessage) GetServerTickrate() float32 {
	if x != nil && x.ServerTickrate != nil {
		return *x.ServerTickrate
	}
	return 0
}

func (x *WorldSnapshotMessage) GetEntitiesTotal() int32 {
	if x != nil && x.EntitiesTotal != nil {
		return *x.EntitiesTotal
	}
	return 0
}

// Дельта изменения блока для снимков
type BlockDelta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      *Vec2                  `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	BlockId       uint32                 `protobuf:"varint,2,opt,name=block_id,json=blockId,proto3" json:"block_id,omitempty"`
	Layer         uint32                 `protobuf:"varint,3,opt,name=layer,proto3" json:"layer,omitempty"`     // 0=FLOOR, 1=ACTIVE, 2=CEILING
	Removed       bool                   `protobuf:"varint,4,opt,name=removed,proto3" json:"removed,omitempty"` // true если блок удалён
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockDelta) Reset() {
	*x = BlockDelta{}
	mi := &file_prediction_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockDelta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockDelta) ProtoMessage() {}

func (x *BlockDelta) ProtoReflect() protoreflect.Message {
	mi := &file_prediction_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockDelta.ProtoReflect.Descriptor instead.
func (*BlockDelta) Descriptor() ([]byte, []int) {
	return file_prediction_proto_rawDescGZIP(), []int{2}
}

func (x *BlockDelta) GetPosition() *Vec2 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *BlockDelta) GetBlockId() uint32 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

func (x *BlockDelta) GetLayer() uint32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *BlockDelta) GetRemoved() bool {
	if x != nil {
		return x.Removed
	}
	return false
}

// Подтверждение обработки ввода
type InputAckMessage struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	InputId   uint32                 `protobuf:"varint,1,opt,name=input_id,json=inputId,proto3" json:"input_id,omitempty"` // ID подтверждённого ввода
	Processed bool                   `protobuf:"varint,2,opt,name=processed,proto3" json:"processed,omitempty"`            // Успешно обработан
	Error     *string                `protobuf:"bytes,3,opt,name=error,proto3,oneof" json:"error,omitempty"`               // Ошибка обработки
	// Коррекция состояния (если нужна)
	CorrectedPosition *Vec2      `protobuf:"bytes,4,opt,name=corrected_position,json=correctedPosition,proto3,oneof" json:"corrected_position,omitempty"`
	CorrectedVelocity *Vec2Float `protobuf:"bytes,5,opt,name=corrected_velocity,json=correctedVelocity,proto3,oneof" json:"corrected_velocity,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *InputAckMessage) Reset() {
	*x = InputAckMessage{}
	mi := &file_prediction_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InputAckMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputAckMessage) ProtoMessage() {}

func (x *InputAckMessage) ProtoReflect() protoreflect.Message {
	mi := &file_prediction_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputAckMessage.ProtoReflect.Descriptor instead.
func (*InputAckMessage) Descriptor() ([]byte, []int) {
	return file_prediction_proto_rawDescGZIP(), []int{3}
}

func (x *InputAckMessage) GetInputId() uint32 {
	if x != nil {
		return x.InputId
	}
	return 0
}

func (x *InputAckMessage) GetProcessed() bool {
	if x != nil {
		return x.Processed
	}
	return false
}

func (x *InputAckMessage) GetError() string {
	if x != nil && x.Error != nil {
		return *x.Error
	}
	return ""
}

func (x *InputAckMessage) GetCorrectedPosition() *Vec2 {
	if x != nil {
		return x.CorrectedPosition
	}
	return nil
}

func (x *InputAckMessage) GetCorrectedVelocity() *Vec2Float {
	if x != nil {
		return x.CorrectedVelocity
	}
	return nil
}

// Статистика prediction для отладки
type PredictionStatsMessage struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	InputsPending        uint32                 `protobuf:"varint,1,opt,name=inputs_pending,json=inputsPending,proto3" json:"inputs_pending,omitempty"`                          // Количество ожидающих ввода
	SnapshotsBuffered    uint32                 `protobuf:"varint,2,opt,name=snapshots_buffered,json=snapshotsBuffered,proto3" json:"snapshots_buffered,omitempty"`              // Снимков в буфере
	AvgPredictionError   float32                `protobuf:"fixed32,3,opt,name=avg_prediction_error,json=avgPredictionError,proto3" json:"avg_prediction_error,omitempty"`        // Средняя ошибка предсказания (пикселей)
	MaxPredictionError   float32                `protobuf:"fixed32,4,opt,name=max_prediction_error,json=maxPredictionError,proto3" json:"max_prediction_error,omitempty"`        // Максимальная ошибка предсказания
	ReconciliationCount  int32                  `protobuf:"varint,5,opt,name=reconciliation_count,json=reconciliationCount,proto3" json:"reconciliation_count,omitempty"`        // Количество коррекций за последнюю секунду
	ClientServerTimeDiff int32                  `protobuf:"varint,6,opt,name=client_server_time_diff,json=clientServerTimeDiff,proto3" json:"client_server_time_diff,omitempty"` // Разница времени клиент-сервер (мс)
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *PredictionStatsMessage) Reset() {
	*x = PredictionStatsMessage{}
	mi := &file_prediction_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PredictionStatsMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PredictionStatsMessage) ProtoMessage() {}

func (x *PredictionStatsMessage) ProtoReflect() protoreflect.Message {
	mi := &file_prediction_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PredictionStatsMessage.ProtoReflect.Descriptor instead.
func (*PredictionStatsMessage) Descriptor() ([]byte, []int) {
	return file_prediction_proto_rawDescGZIP(), []int{4}
}

func (x *PredictionStatsMessage) GetInputsPending() uint32 {
	if x != nil {
		return x.InputsPending
	}
	return 0
}

func (x *PredictionStatsMessage) GetSnapshotsBuffered() uint32 {
	if x != nil {
		return x.SnapshotsBuffered
	}
	return 0
}

func (x *PredictionStatsMessage) GetAvgPredictionError() float32 {
	if x != nil {
		return x.AvgPredictionError
	}
	return 0
}

func (x *PredictionStatsMessage) GetMaxPredictionError() float32 {
	if x != nil {
		return x.MaxPredictionError
	}
	return 0
}

func (x *PredictionStatsMessage) GetReconciliationCount() int32 {
	if x != nil {
		return x.ReconciliationCount
	}
	return 0
}

func (x *PredictionStatsMessage) GetClientServerTimeDiff() int32 {
	if x != nil {
		return x.ClientServerTimeDiff
	}
	return 0
}

var File_prediction_proto protoreflect.FileDescriptor

const file_prediction_proto_rawDesc = "" +
	"\n" +
	"\x10prediction.proto\x12\bprotocol\x1a\fcommon.proto\x1a\fentity.proto\"\xd6\x04\n" +
	"\x12ClientInputMessage\x12\x19\n" +
	"\binput_id\x18\x01 \x01(\rR\ainputId\x12)\n" +
	"\x10client_timestamp\x18\x02 \x01(\x03R\x0fclientTimestamp\x128\n" +
	"\n" +
	"input_type\x18\x03 \x01(\x0e2\x19.protocol.ClientInputTypeR\tinputType\x12:\n" +
	"\x0emove_direction\x18\x04 \x01(\v2\x0e.protocol.Vec2H\x00R\rmoveDirection\x88\x01\x01\x12<\n" +
	"\x0ftarget_position\x18\x05 \x01(\v2\x0e.protocol.Vec2H\x01R\x0etargetPosition\x88\x01\x01\x12-\n" +
	"\x10target_entity_id\x18\x06 \x01(\x04H\x02R\x0etargetEntityId\x88\x01\x01\x12\x1c\n" +
	"\aitem_id\x18\a \x01(\rH\x03R\x06itemId\x88\x01\x01\x12.\n" +
	"\x06params\x18\b \x01(\v2\x16.protocol.JsonMetadataR\x06params\x12=\n" +
	"\x12predicted_position\x18\t \x01(\v2\x0e.protocol.Vec2R\x11predictedPosition\x12B\n" +
	"\x12predicted_velocity\x18\n" +
	" \x01(\v2\x13.protocol.Vec2FloatR\x11predictedVelocityB\x11\n" +
	"\x0f_move_directionB\x12\n" +
	"\x10_target_positionB\x13\n" +
	"\x11_target_entity_idB\n" +
	"\n" +
	"\b_item_id\"\xc8\x03\n" +
	"\x14WorldSnapshotMessage\x12\x1f\n" +
	"\vsnapshot_id\x18\x01 \x01(\rR\n" +
	"snapshotId\x12)\n" +
	"\x10server_timestamp\x18\x02 \x01(\x03R\x0fserverTimestamp\x120\n" +
	"\x14last_processed_input\x18\x03 \x01(\rR\x12lastProcessedInput\x127\n" +
	"\fplayer_state\x18\x04 \x01(\v2\x14.protocol.EntityDataR\vplayerState\x12?\n" +
	"\x10visible_entities\x18\x05 \x03(\v2\x14.protocol.EntityDataR\x0fvisibleEntities\x127\n" +
	"\fblock_deltas\x18\x06 \x03(\v2\x14.protocol.BlockDeltaR\vblockDeltas\x12,\n" +
	"\x0fserver_tickrate\x18\a \x01(\x02H\x00R\x0eserverTickrate\x88\x01\x01\x12*\n" +
	"\x0eentities_total\x18\b \x01(\x05H\x01R\rentitiesTotal\x88\x01\x01B\x12\n" +
	"\x10_server_tickrateB\x11\n" +
	"\x0f_entities_total\"\x83\x01\n" +
	"\n" +
	"BlockDelta\x12*\n" +
	"\bposition\x18\x01 \x01(\v2\x0e.protocol.Vec2R\bposition\x12\x19\n" +
	"\bblock_id\x18\x02 \x01(\rR\ablockId\x12\x14\n" +
	"\x05layer\x18\x03 \x01(\rR\x05layer\x12\x18\n" +
	"\aremoved\x18\x04 \x01(\bR\aremoved\"\xaa\x02\n" +
	"\x0fInputAckMessage\x12\x19\n" +
	"\binput_id\x18\x01 \x01(\rR\ainputId\x12\x1c\n" +
	"\tprocessed\x18\x02 \x01(\bR\tprocessed\x12\x19\n" +
	"\x05error\x18\x03 \x01(\tH\x00R\x05error\x88\x01\x01\x12B\n" +
	"\x12corrected_position\x18\x04 \x01(\v2\x0e.protocol.Vec2H\x01R\x11correctedPosition\x88\x01\x01\x12G\n" +
	"\x12corrected_velocity\x18\x05 \x01(\v2\x13.protocol.Vec2FloatH\x02R\x11correctedVelocity\x88\x01\x01B\b\n" +
	"\x06_errorB\x15\n" +
	"\x13_corrected_positionB\x15\n" +
	"\x13_corrected_velocity\"\xbc\x02\n" +
	"\x16PredictionStatsMessage\x12%\n" +
	"\x0einputs_pending\x18\x01 \x01(\rR\rinputsPending\x12-\n" +
	"\x12snapshots_buffered\x18\x02 \x01(\rR\x11snapshotsBuffered\x120\n" +
	"\x14avg_prediction_error\x18\x03 \x01(\x02R\x12avgPredictionError\x120\n" +
	"\x14max_prediction_error\x18\x04 \x01(\x02R\x12maxPredictionError\x121\n" +
	"\x14reconciliation_count\x18\x05 \x01(\x05R\x13reconciliationCount\x125\n" +
	"\x17client_server_time_diff\x18\x06 \x01(\x05R\x14clientServerTimeDiff*\xa0\x01\n" +
	"\x0fClientInputType\x12\x11\n" +
	"\rINPUT_UNKNOWN\x10\x00\x12\x0e\n" +
	"\n" +
	"INPUT_MOVE\x10\x01\x12\x12\n" +
	"\x0eINPUT_INTERACT\x10\x02\x12\x10\n" +
	"\fINPUT_ATTACK\x10\x03\x12\x12\n" +
	"\x0eINPUT_USE_ITEM\x10\x04\x12\x0f\n" +
	"\vINPUT_BUILD\x10\x05\x12\x0e\n" +
	"\n" +
	"INPUT_CHAT\x10\x06\x12\x0f\n" +
	"\vINPUT_EMOTE\x10\aB.Z,github.com/annel0/mmo-game/internal/protocolb\x06proto3"

var (
	file_prediction_proto_rawDescOnce sync.Once
	file_prediction_proto_rawDescData []byte
)

func file_prediction_proto_rawDescGZIP() []byte {
	file_prediction_proto_rawDescOnce.Do(func() {
		file_prediction_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_prediction_proto_rawDesc), len(file_prediction_proto_rawDesc)))
	})
	return file_prediction_proto_rawDescData
}

var file_prediction_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_prediction_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_prediction_proto_goTypes = []any{
	(ClientInputType)(0),           // 0: protocol.ClientInputType
	(*ClientInputMessage)(nil),     // 1: protocol.ClientInputMessage
	(*WorldSnapshotMessage)(nil),   // 2: protocol.WorldSnapshotMessage
	(*BlockDelta)(nil),             // 3: protocol.BlockDelta
	(*InputAckMessage)(nil),        // 4: protocol.InputAckMessage
	(*PredictionStatsMessage)(nil), // 5: protocol.PredictionStatsMessage
	(*Vec2)(nil),                   // 6: protocol.Vec2
	(*JsonMetadata)(nil),           // 7: protocol.JsonMetadata
	(*Vec2Float)(nil),              // 8: protocol.Vec2Float
	(*EntityData)(nil),             // 9: protocol.EntityData
}
var file_prediction_proto_depIdxs = []int32{
	0,  // 0: protocol.ClientInputMessage.input_type:type_name -> protocol.ClientInputType
	6,  // 1: protocol.ClientInputMessage.move_direction:type_name -> protocol.Vec2
	6,  // 2: protocol.ClientInputMessage.target_position:type_name -> protocol.Vec2
	7,  // 3: protocol.ClientInputMessage.params:type_name -> protocol.JsonMetadata
	6,  // 4: protocol.ClientInputMessage.predicted_position:type_name -> protocol.Vec2
	8,  // 5: protocol.ClientInputMessage.predicted_velocity:type_name -> protocol.Vec2Float
	9,  // 6: protocol.WorldSnapshotMessage.player_state:type_name -> protocol.EntityData
	9,  // 7: protocol.WorldSnapshotMessage.visible_entities:type_name -> protocol.EntityData
	3,  // 8: protocol.WorldSnapshotMessage.block_deltas:type_name -> protocol.BlockDelta
	6,  // 9: protocol.BlockDelta.position:type_name -> protocol.Vec2
	6,  // 10: protocol.InputAckMessage.corrected_position:type_name -> protocol.Vec2
	8,  // 11: protocol.InputAckMessage.corrected_velocity:type_name -> protocol.Vec2Float
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_prediction_proto_init() }
func file_prediction_proto_init() {
	if File_prediction_proto != nil {
		return
	}
	file_common_proto_init()
	file_entity_proto_init()
	file_prediction_proto_msgTypes[0].OneofWrappers = []any{}
	file_prediction_proto_msgTypes[1].OneofWrappers = []any{}
	file_prediction_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_prediction_proto_rawDesc), len(file_prediction_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_prediction_proto_goTypes,
		DependencyIndexes: file_prediction_proto_depIdxs,
		EnumInfos:         file_prediction_proto_enumTypes,
		MessageInfos:      file_prediction_proto_msgTypes,
	}.Build()
	File_prediction_proto = out.File
	file_prediction_proto_goTypes = nil
	file_prediction_proto_depIdxs = nil
}
