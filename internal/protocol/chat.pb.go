// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: chat.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Типы сообщений чата
type ChatType int32

const (
	ChatType_CHAT_GLOBAL  ChatType = 0
	ChatType_CHAT_LOCAL   ChatType = 1
	ChatType_CHAT_PRIVATE ChatType = 2
	ChatType_CHAT_SYSTEM  ChatType = 3
	ChatType_CHAT_TEAM    ChatType = 4
	ChatType_CHAT_GUILD   ChatType = 5
)

// Enum value maps for ChatType.
var (
	ChatType_name = map[int32]string{
		0: "CHAT_GLOBAL",
		1: "CHAT_LOCAL",
		2: "CHAT_PRIVATE",
		3: "CHAT_SYSTEM",
		4: "CHAT_TEAM",
		5: "CHAT_GUILD",
	}
	ChatType_value = map[string]int32{
		"CHAT_GLOBAL":  0,
		"CHAT_LOCAL":   1,
		"CHAT_PRIVATE": 2,
		"CHAT_SYSTEM":  3,
		"CHAT_TEAM":    4,
		"CHAT_GUILD":   5,
	}
)

func (x ChatType) Enum() *ChatType {
	p := new(ChatType)
	*p = x
	return p
}

func (x ChatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_proto_enumTypes[0].Descriptor()
}

func (ChatType) Type() protoreflect.EnumType {
	return &file_chat_proto_enumTypes[0]
}

func (x ChatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatType.Descriptor instead.
func (ChatType) EnumDescriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

// Запрос на отправку сообщения чата
type ChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          ChatType               `protobuf:"varint,1,opt,name=type,proto3,enum=protocol.ChatType" json:"type,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TargetId      *uint64                `protobuf:"varint,3,opt,name=target_id,json=targetId,proto3,oneof" json:"target_id,omitempty"`         // Для личных сообщений
	TargetGroup   *string                `protobuf:"bytes,4,opt,name=target_group,json=targetGroup,proto3,oneof" json:"target_group,omitempty"` // Для командных или гильдийских сообщений
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

func (x *ChatMessage) GetType() ChatType {
	if x != nil {
		return x.Type
	}
	return ChatType_CHAT_GLOBAL
}

func (x *ChatMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatMessage) GetTargetId() uint64 {
	if x != nil && x.TargetId != nil {
		return *x.TargetId
	}
	return 0
}

func (x *ChatMessage) GetTargetGroup() string {
	if x != nil && x.TargetGroup != nil {
		return *x.TargetGroup
	}
	return ""
}

// Сообщение чата, отправляемое сервером
type ChatBroadcastMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          ChatType               `protobuf:"varint,1,opt,name=type,proto3,enum=protocol.ChatType" json:"type,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	SenderId      uint64                 `protobuf:"varint,3,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderName    string                 `protobuf:"bytes,4,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TargetId      *uint64                `protobuf:"varint,6,opt,name=target_id,json=targetId,proto3,oneof" json:"target_id,omitempty"`         // Для личных сообщений
	TargetGroup   *string                `protobuf:"bytes,7,opt,name=target_group,json=targetGroup,proto3,oneof" json:"target_group,omitempty"` // Для командных или гильдийских сообщений
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatBroadcastMessage) Reset() {
	*x = ChatBroadcastMessage{}
	mi := &file_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatBroadcastMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatBroadcastMessage) ProtoMessage() {}

func (x *ChatBroadcastMessage) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatBroadcastMessage.ProtoReflect.Descriptor instead.
func (*ChatBroadcastMessage) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

func (x *ChatBroadcastMessage) GetType() ChatType {
	if x != nil {
		return x.Type
	}
	return ChatType_CHAT_GLOBAL
}

func (x *ChatBroadcastMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatBroadcastMessage) GetSenderId() uint64 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *ChatBroadcastMessage) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *ChatBroadcastMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ChatBroadcastMessage) GetTargetId() uint64 {
	if x != nil && x.TargetId != nil {
		return *x.TargetId
	}
	return 0
}

func (x *ChatBroadcastMessage) GetTargetGroup() string {
	if x != nil && x.TargetGroup != nil {
		return *x.TargetGroup
	}
	return ""
}

var File_chat_proto protoreflect.FileDescriptor

const file_chat_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"chat.proto\x12\bprotocol\"\xb8\x01\n" +
	"\vChatMessage\x12&\n" +
	"\x04type\x18\x01 \x01(\x0e2\x12.protocol.ChatTypeR\x04type\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12 \n" +
	"\ttarget_id\x18\x03 \x01(\x04H\x00R\btargetId\x88\x01\x01\x12&\n" +
	"\ftarget_group\x18\x04 \x01(\tH\x01R\vtargetGroup\x88\x01\x01B\f\n" +
	"\n" +
	"_target_idB\x0f\n" +
	"\r_target_group\"\x9d\x02\n" +
	"\x14ChatBroadcastMessage\x12&\n" +
	"\x04type\x18\x01 \x01(\x0e2\x12.protocol.ChatTypeR\x04type\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1b\n" +
	"\tsender_id\x18\x03 \x01(\x04R\bsenderId\x12\x1f\n" +
	"\vsender_name\x18\x04 \x01(\tR\n" +
	"senderName\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\x12 \n" +
	"\ttarget_id\x18\x06 \x01(\x04H\x00R\btargetId\x88\x01\x01\x12&\n" +
	"\ftarget_group\x18\a \x01(\tH\x01R\vtargetGroup\x88\x01\x01B\f\n" +
	"\n" +
	"_target_idB\x0f\n" +
	"\r_target_group*m\n" +
	"\bChatType\x12\x0f\n" +
	"\vCHAT_GLOBAL\x10\x00\x12\x0e\n" +
	"\n" +
	"CHAT_LOCAL\x10\x01\x12\x10\n" +
	"\fCHAT_PRIVATE\x10\x02\x12\x0f\n" +
	"\vCHAT_SYSTEM\x10\x03\x12\r\n" +
	"\tCHAT_TEAM\x10\x04\x12\x0e\n" +
	"\n" +
	"CHAT_GUILD\x10\x05B.Z,github.com/annel0/mmo-game/internal/protocolb\x06proto3"

var (
	file_chat_proto_rawDescOnce sync.Once
	file_chat_proto_rawDescData []byte
)

func file_chat_proto_rawDescGZIP() []byte {
	file_chat_proto_rawDescOnce.Do(func() {
		file_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_proto_rawDesc), len(file_chat_proto_rawDesc)))
	})
	return file_chat_proto_rawDescData
}

var file_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_chat_proto_goTypes = []any{
	(ChatType)(0),                // 0: protocol.ChatType
	(*ChatMessage)(nil),          // 1: protocol.ChatMessage
	(*ChatBroadcastMessage)(nil), // 2: protocol.ChatBroadcastMessage
}
var file_chat_proto_depIdxs = []int32{
	0, // 0: protocol.ChatMessage.type:type_name -> protocol.ChatType
	0, // 1: protocol.ChatBroadcastMessage.type:type_name -> protocol.ChatType
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_chat_proto_init() }
func file_chat_proto_init() {
	if File_chat_proto != nil {
		return
	}
	file_chat_proto_msgTypes[0].OneofWrappers = []any{}
	file_chat_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_proto_rawDesc), len(file_chat_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chat_proto_goTypes,
		DependencyIndexes: file_chat_proto_depIdxs,
		EnumInfos:         file_chat_proto_enumTypes,
		MessageInfos:      file_chat_proto_msgTypes,
	}.Build()
	File_chat_proto = out.File
	file_chat_proto_goTypes = nil
	file_chat_proto_depIdxs = nil
}
