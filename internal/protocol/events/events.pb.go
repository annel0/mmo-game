// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: internal/protocol/proto/events.proto

package events

import (
	_ "github.com/annel0/mmo-game/internal/protocol"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Координаты чанка
type ChunkCoords struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             int32                  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkCoords) Reset() {
	*x = ChunkCoords{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkCoords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkCoords) ProtoMessage() {}

func (x *ChunkCoords) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkCoords.ProtoReflect.Descriptor instead.
func (*ChunkCoords) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{0}
}

func (x *ChunkCoords) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ChunkCoords) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

// Координаты блока
type BlockCoords struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             int32                  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	Z             int32                  `protobuf:"varint,3,opt,name=z,proto3" json:"z,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockCoords) Reset() {
	*x = BlockCoords{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockCoords) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockCoords) ProtoMessage() {}

func (x *BlockCoords) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockCoords.ProtoReflect.Descriptor instead.
func (*BlockCoords) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{1}
}

func (x *BlockCoords) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *BlockCoords) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *BlockCoords) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

// Версия схемы событий для совместимости
type EventSchema struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       int32                  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventSchema) Reset() {
	*x = EventSchema{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventSchema) ProtoMessage() {}

func (x *EventSchema) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventSchema.ProtoReflect.Descriptor instead.
func (*EventSchema) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{2}
}

func (x *EventSchema) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *EventSchema) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Обёртка для всех событий
type EventEnvelope struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventType     string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RegionId      string                 `protobuf:"bytes,4,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	SourceNode    string                 `protobuf:"bytes,5,opt,name=source_node,json=sourceNode,proto3" json:"source_node,omitempty"`
	SchemaVersion int32                  `protobuf:"varint,6,opt,name=schema_version,json=schemaVersion,proto3" json:"schema_version,omitempty"`
	// Types that are valid to be assigned to Event:
	//
	//	*EventEnvelope_WorldEvent
	//	*EventEnvelope_BlockEvent
	//	*EventEnvelope_ChatEvent
	//	*EventEnvelope_SystemEvent
	Event         isEventEnvelope_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EventEnvelope) Reset() {
	*x = EventEnvelope{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventEnvelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventEnvelope) ProtoMessage() {}

func (x *EventEnvelope) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventEnvelope.ProtoReflect.Descriptor instead.
func (*EventEnvelope) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{3}
}

func (x *EventEnvelope) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *EventEnvelope) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *EventEnvelope) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *EventEnvelope) GetRegionId() string {
	if x != nil {
		return x.RegionId
	}
	return ""
}

func (x *EventEnvelope) GetSourceNode() string {
	if x != nil {
		return x.SourceNode
	}
	return ""
}

func (x *EventEnvelope) GetSchemaVersion() int32 {
	if x != nil {
		return x.SchemaVersion
	}
	return 0
}

func (x *EventEnvelope) GetEvent() isEventEnvelope_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *EventEnvelope) GetWorldEvent() *WorldEvent {
	if x != nil {
		if x, ok := x.Event.(*EventEnvelope_WorldEvent); ok {
			return x.WorldEvent
		}
	}
	return nil
}

func (x *EventEnvelope) GetBlockEvent() *BlockEvent {
	if x != nil {
		if x, ok := x.Event.(*EventEnvelope_BlockEvent); ok {
			return x.BlockEvent
		}
	}
	return nil
}

func (x *EventEnvelope) GetChatEvent() *ChatEvent {
	if x != nil {
		if x, ok := x.Event.(*EventEnvelope_ChatEvent); ok {
			return x.ChatEvent
		}
	}
	return nil
}

func (x *EventEnvelope) GetSystemEvent() *SystemEvent {
	if x != nil {
		if x, ok := x.Event.(*EventEnvelope_SystemEvent); ok {
			return x.SystemEvent
		}
	}
	return nil
}

type isEventEnvelope_Event interface {
	isEventEnvelope_Event()
}

type EventEnvelope_WorldEvent struct {
	WorldEvent *WorldEvent `protobuf:"bytes,10,opt,name=world_event,json=worldEvent,proto3,oneof"`
}

type EventEnvelope_BlockEvent struct {
	BlockEvent *BlockEvent `protobuf:"bytes,11,opt,name=block_event,json=blockEvent,proto3,oneof"`
}

type EventEnvelope_ChatEvent struct {
	ChatEvent *ChatEvent `protobuf:"bytes,12,opt,name=chat_event,json=chatEvent,proto3,oneof"`
}

type EventEnvelope_SystemEvent struct {
	SystemEvent *SystemEvent `protobuf:"bytes,13,opt,name=system_event,json=systemEvent,proto3,oneof"`
}

func (*EventEnvelope_WorldEvent) isEventEnvelope_Event() {}

func (*EventEnvelope_BlockEvent) isEventEnvelope_Event() {}

func (*EventEnvelope_ChatEvent) isEventEnvelope_Event() {}

func (*EventEnvelope_SystemEvent) isEventEnvelope_Event() {}

// События мира
type WorldEvent struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	WorldId string                 `protobuf:"bytes,1,opt,name=world_id,json=worldId,proto3" json:"world_id,omitempty"`
	// Types that are valid to be assigned to WorldAction:
	//
	//	*WorldEvent_ChunkLoaded_
	//	*WorldEvent_ChunkUnloaded_
	//	*WorldEvent_WorldStateChanged_
	WorldAction   isWorldEvent_WorldAction `protobuf_oneof:"world_action"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorldEvent) Reset() {
	*x = WorldEvent{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorldEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldEvent) ProtoMessage() {}

func (x *WorldEvent) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldEvent.ProtoReflect.Descriptor instead.
func (*WorldEvent) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{4}
}

func (x *WorldEvent) GetWorldId() string {
	if x != nil {
		return x.WorldId
	}
	return ""
}

func (x *WorldEvent) GetWorldAction() isWorldEvent_WorldAction {
	if x != nil {
		return x.WorldAction
	}
	return nil
}

func (x *WorldEvent) GetChunkLoaded() *WorldEvent_ChunkLoaded {
	if x != nil {
		if x, ok := x.WorldAction.(*WorldEvent_ChunkLoaded_); ok {
			return x.ChunkLoaded
		}
	}
	return nil
}

func (x *WorldEvent) GetChunkUnloaded() *WorldEvent_ChunkUnloaded {
	if x != nil {
		if x, ok := x.WorldAction.(*WorldEvent_ChunkUnloaded_); ok {
			return x.ChunkUnloaded
		}
	}
	return nil
}

func (x *WorldEvent) GetWorldStateChanged() *WorldEvent_WorldStateChanged {
	if x != nil {
		if x, ok := x.WorldAction.(*WorldEvent_WorldStateChanged_); ok {
			return x.WorldStateChanged
		}
	}
	return nil
}

type isWorldEvent_WorldAction interface {
	isWorldEvent_WorldAction()
}

type WorldEvent_ChunkLoaded_ struct {
	ChunkLoaded *WorldEvent_ChunkLoaded `protobuf:"bytes,10,opt,name=chunk_loaded,json=chunkLoaded,proto3,oneof"`
}

type WorldEvent_ChunkUnloaded_ struct {
	ChunkUnloaded *WorldEvent_ChunkUnloaded `protobuf:"bytes,11,opt,name=chunk_unloaded,json=chunkUnloaded,proto3,oneof"`
}

type WorldEvent_WorldStateChanged_ struct {
	WorldStateChanged *WorldEvent_WorldStateChanged `protobuf:"bytes,12,opt,name=world_state_changed,json=worldStateChanged,proto3,oneof"`
}

func (*WorldEvent_ChunkLoaded_) isWorldEvent_WorldAction() {}

func (*WorldEvent_ChunkUnloaded_) isWorldEvent_WorldAction() {}

func (*WorldEvent_WorldStateChanged_) isWorldEvent_WorldAction() {}

// События блоков
type BlockEvent struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Coords   *BlockCoords           `protobuf:"bytes,1,opt,name=coords,proto3" json:"coords,omitempty"`
	PlayerId string                 `protobuf:"bytes,2,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	// Types that are valid to be assigned to BlockAction:
	//
	//	*BlockEvent_BlockPlaced_
	//	*BlockEvent_BlockBroken_
	//	*BlockEvent_BlockUpdated_
	BlockAction   isBlockEvent_BlockAction `protobuf_oneof:"block_action"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockEvent) Reset() {
	*x = BlockEvent{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockEvent) ProtoMessage() {}

func (x *BlockEvent) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockEvent.ProtoReflect.Descriptor instead.
func (*BlockEvent) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{5}
}

func (x *BlockEvent) GetCoords() *BlockCoords {
	if x != nil {
		return x.Coords
	}
	return nil
}

func (x *BlockEvent) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *BlockEvent) GetBlockAction() isBlockEvent_BlockAction {
	if x != nil {
		return x.BlockAction
	}
	return nil
}

func (x *BlockEvent) GetBlockPlaced() *BlockEvent_BlockPlaced {
	if x != nil {
		if x, ok := x.BlockAction.(*BlockEvent_BlockPlaced_); ok {
			return x.BlockPlaced
		}
	}
	return nil
}

func (x *BlockEvent) GetBlockBroken() *BlockEvent_BlockBroken {
	if x != nil {
		if x, ok := x.BlockAction.(*BlockEvent_BlockBroken_); ok {
			return x.BlockBroken
		}
	}
	return nil
}

func (x *BlockEvent) GetBlockUpdated() *BlockEvent_BlockUpdated {
	if x != nil {
		if x, ok := x.BlockAction.(*BlockEvent_BlockUpdated_); ok {
			return x.BlockUpdated
		}
	}
	return nil
}

type isBlockEvent_BlockAction interface {
	isBlockEvent_BlockAction()
}

type BlockEvent_BlockPlaced_ struct {
	BlockPlaced *BlockEvent_BlockPlaced `protobuf:"bytes,10,opt,name=block_placed,json=blockPlaced,proto3,oneof"`
}

type BlockEvent_BlockBroken_ struct {
	BlockBroken *BlockEvent_BlockBroken `protobuf:"bytes,11,opt,name=block_broken,json=blockBroken,proto3,oneof"`
}

type BlockEvent_BlockUpdated_ struct {
	BlockUpdated *BlockEvent_BlockUpdated `protobuf:"bytes,12,opt,name=block_updated,json=blockUpdated,proto3,oneof"`
}

func (*BlockEvent_BlockPlaced_) isBlockEvent_BlockAction() {}

func (*BlockEvent_BlockBroken_) isBlockEvent_BlockAction() {}

func (*BlockEvent_BlockUpdated_) isBlockEvent_BlockAction() {}

// События чата
type ChatEvent struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	PlayerId string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Channel  string                 `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	// Types that are valid to be assigned to ChatAction:
	//
	//	*ChatEvent_MessageSent_
	//	*ChatEvent_PlayerJoined_
	//	*ChatEvent_PlayerLeft_
	ChatAction    isChatEvent_ChatAction `protobuf_oneof:"chat_action"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatEvent) Reset() {
	*x = ChatEvent{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatEvent) ProtoMessage() {}

func (x *ChatEvent) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatEvent.ProtoReflect.Descriptor instead.
func (*ChatEvent) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{6}
}

func (x *ChatEvent) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ChatEvent) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *ChatEvent) GetChatAction() isChatEvent_ChatAction {
	if x != nil {
		return x.ChatAction
	}
	return nil
}

func (x *ChatEvent) GetMessageSent() *ChatEvent_MessageSent {
	if x != nil {
		if x, ok := x.ChatAction.(*ChatEvent_MessageSent_); ok {
			return x.MessageSent
		}
	}
	return nil
}

func (x *ChatEvent) GetPlayerJoined() *ChatEvent_PlayerJoined {
	if x != nil {
		if x, ok := x.ChatAction.(*ChatEvent_PlayerJoined_); ok {
			return x.PlayerJoined
		}
	}
	return nil
}

func (x *ChatEvent) GetPlayerLeft() *ChatEvent_PlayerLeft {
	if x != nil {
		if x, ok := x.ChatAction.(*ChatEvent_PlayerLeft_); ok {
			return x.PlayerLeft
		}
	}
	return nil
}

type isChatEvent_ChatAction interface {
	isChatEvent_ChatAction()
}

type ChatEvent_MessageSent_ struct {
	MessageSent *ChatEvent_MessageSent `protobuf:"bytes,10,opt,name=message_sent,json=messageSent,proto3,oneof"`
}

type ChatEvent_PlayerJoined_ struct {
	PlayerJoined *ChatEvent_PlayerJoined `protobuf:"bytes,11,opt,name=player_joined,json=playerJoined,proto3,oneof"`
}

type ChatEvent_PlayerLeft_ struct {
	PlayerLeft *ChatEvent_PlayerLeft `protobuf:"bytes,12,opt,name=player_left,json=playerLeft,proto3,oneof"`
}

func (*ChatEvent_MessageSent_) isChatEvent_ChatAction() {}

func (*ChatEvent_PlayerJoined_) isChatEvent_ChatAction() {}

func (*ChatEvent_PlayerLeft_) isChatEvent_ChatAction() {}

// Системные события
type SystemEvent struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Component string                 `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
	Level     string                 `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"` // info, warn, error
	// Types that are valid to be assigned to SystemAction:
	//
	//	*SystemEvent_ServiceStarted_
	//	*SystemEvent_ServiceStopped_
	//	*SystemEvent_ErrorOccurred_
	//	*SystemEvent_MetricReported_
	SystemAction  isSystemEvent_SystemAction `protobuf_oneof:"system_action"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemEvent) Reset() {
	*x = SystemEvent{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemEvent) ProtoMessage() {}

func (x *SystemEvent) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemEvent.ProtoReflect.Descriptor instead.
func (*SystemEvent) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{7}
}

func (x *SystemEvent) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SystemEvent) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *SystemEvent) GetSystemAction() isSystemEvent_SystemAction {
	if x != nil {
		return x.SystemAction
	}
	return nil
}

func (x *SystemEvent) GetServiceStarted() *SystemEvent_ServiceStarted {
	if x != nil {
		if x, ok := x.SystemAction.(*SystemEvent_ServiceStarted_); ok {
			return x.ServiceStarted
		}
	}
	return nil
}

func (x *SystemEvent) GetServiceStopped() *SystemEvent_ServiceStopped {
	if x != nil {
		if x, ok := x.SystemAction.(*SystemEvent_ServiceStopped_); ok {
			return x.ServiceStopped
		}
	}
	return nil
}

func (x *SystemEvent) GetErrorOccurred() *SystemEvent_ErrorOccurred {
	if x != nil {
		if x, ok := x.SystemAction.(*SystemEvent_ErrorOccurred_); ok {
			return x.ErrorOccurred
		}
	}
	return nil
}

func (x *SystemEvent) GetMetricReported() *SystemEvent_MetricReported {
	if x != nil {
		if x, ok := x.SystemAction.(*SystemEvent_MetricReported_); ok {
			return x.MetricReported
		}
	}
	return nil
}

type isSystemEvent_SystemAction interface {
	isSystemEvent_SystemAction()
}

type SystemEvent_ServiceStarted_ struct {
	ServiceStarted *SystemEvent_ServiceStarted `protobuf:"bytes,10,opt,name=service_started,json=serviceStarted,proto3,oneof"`
}

type SystemEvent_ServiceStopped_ struct {
	ServiceStopped *SystemEvent_ServiceStopped `protobuf:"bytes,11,opt,name=service_stopped,json=serviceStopped,proto3,oneof"`
}

type SystemEvent_ErrorOccurred_ struct {
	ErrorOccurred *SystemEvent_ErrorOccurred `protobuf:"bytes,12,opt,name=error_occurred,json=errorOccurred,proto3,oneof"`
}

type SystemEvent_MetricReported_ struct {
	MetricReported *SystemEvent_MetricReported `protobuf:"bytes,13,opt,name=metric_reported,json=metricReported,proto3,oneof"`
}

func (*SystemEvent_ServiceStarted_) isSystemEvent_SystemAction() {}

func (*SystemEvent_ServiceStopped_) isSystemEvent_SystemAction() {}

func (*SystemEvent_ErrorOccurred_) isSystemEvent_SystemAction() {}

func (*SystemEvent_MetricReported_) isSystemEvent_SystemAction() {}

type WorldEvent_ChunkLoaded struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Coords        *ChunkCoords           `protobuf:"bytes,1,opt,name=coords,proto3" json:"coords,omitempty"`
	BlockCount    int32                  `protobuf:"varint,2,opt,name=block_count,json=blockCount,proto3" json:"block_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorldEvent_ChunkLoaded) Reset() {
	*x = WorldEvent_ChunkLoaded{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorldEvent_ChunkLoaded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldEvent_ChunkLoaded) ProtoMessage() {}

func (x *WorldEvent_ChunkLoaded) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldEvent_ChunkLoaded.ProtoReflect.Descriptor instead.
func (*WorldEvent_ChunkLoaded) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{4, 0}
}

func (x *WorldEvent_ChunkLoaded) GetCoords() *ChunkCoords {
	if x != nil {
		return x.Coords
	}
	return nil
}

func (x *WorldEvent_ChunkLoaded) GetBlockCount() int32 {
	if x != nil {
		return x.BlockCount
	}
	return 0
}

type WorldEvent_ChunkUnloaded struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Coords        *ChunkCoords           `protobuf:"bytes,1,opt,name=coords,proto3" json:"coords,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorldEvent_ChunkUnloaded) Reset() {
	*x = WorldEvent_ChunkUnloaded{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorldEvent_ChunkUnloaded) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldEvent_ChunkUnloaded) ProtoMessage() {}

func (x *WorldEvent_ChunkUnloaded) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldEvent_ChunkUnloaded.ProtoReflect.Descriptor instead.
func (*WorldEvent_ChunkUnloaded) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{4, 1}
}

func (x *WorldEvent_ChunkUnloaded) GetCoords() *ChunkCoords {
	if x != nil {
		return x.Coords
	}
	return nil
}

func (x *WorldEvent_ChunkUnloaded) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type WorldEvent_WorldStateChanged struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         string                 `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	PreviousState string                 `protobuf:"bytes,2,opt,name=previous_state,json=previousState,proto3" json:"previous_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WorldEvent_WorldStateChanged) Reset() {
	*x = WorldEvent_WorldStateChanged{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WorldEvent_WorldStateChanged) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorldEvent_WorldStateChanged) ProtoMessage() {}

func (x *WorldEvent_WorldStateChanged) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorldEvent_WorldStateChanged.ProtoReflect.Descriptor instead.
func (*WorldEvent_WorldStateChanged) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{4, 2}
}

func (x *WorldEvent_WorldStateChanged) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *WorldEvent_WorldStateChanged) GetPreviousState() string {
	if x != nil {
		return x.PreviousState
	}
	return ""
}

type BlockEvent_BlockPlaced struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockType     string                 `protobuf:"bytes,1,opt,name=block_type,json=blockType,proto3" json:"block_type,omitempty"`
	Layer         string                 `protobuf:"bytes,2,opt,name=layer,proto3" json:"layer,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockEvent_BlockPlaced) Reset() {
	*x = BlockEvent_BlockPlaced{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockEvent_BlockPlaced) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockEvent_BlockPlaced) ProtoMessage() {}

func (x *BlockEvent_BlockPlaced) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockEvent_BlockPlaced.ProtoReflect.Descriptor instead.
func (*BlockEvent_BlockPlaced) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{5, 0}
}

func (x *BlockEvent_BlockPlaced) GetBlockType() string {
	if x != nil {
		return x.BlockType
	}
	return ""
}

func (x *BlockEvent_BlockPlaced) GetLayer() string {
	if x != nil {
		return x.Layer
	}
	return ""
}

func (x *BlockEvent_BlockPlaced) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type BlockEvent_BlockBroken struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockType     string                 `protobuf:"bytes,1,opt,name=block_type,json=blockType,proto3" json:"block_type,omitempty"`
	Layer         string                 `protobuf:"bytes,2,opt,name=layer,proto3" json:"layer,omitempty"`
	DroppedItems  bool                   `protobuf:"varint,3,opt,name=dropped_items,json=droppedItems,proto3" json:"dropped_items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockEvent_BlockBroken) Reset() {
	*x = BlockEvent_BlockBroken{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockEvent_BlockBroken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockEvent_BlockBroken) ProtoMessage() {}

func (x *BlockEvent_BlockBroken) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockEvent_BlockBroken.ProtoReflect.Descriptor instead.
func (*BlockEvent_BlockBroken) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{5, 1}
}

func (x *BlockEvent_BlockBroken) GetBlockType() string {
	if x != nil {
		return x.BlockType
	}
	return ""
}

func (x *BlockEvent_BlockBroken) GetLayer() string {
	if x != nil {
		return x.Layer
	}
	return ""
}

func (x *BlockEvent_BlockBroken) GetDroppedItems() bool {
	if x != nil {
		return x.DroppedItems
	}
	return false
}

type BlockEvent_BlockUpdated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BlockType     string                 `protobuf:"bytes,1,opt,name=block_type,json=blockType,proto3" json:"block_type,omitempty"`
	Layer         string                 `protobuf:"bytes,2,opt,name=layer,proto3" json:"layer,omitempty"`
	OldMetadata   map[string]string      `protobuf:"bytes,3,rep,name=old_metadata,json=oldMetadata,proto3" json:"old_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	NewMetadata   map[string]string      `protobuf:"bytes,4,rep,name=new_metadata,json=newMetadata,proto3" json:"new_metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockEvent_BlockUpdated) Reset() {
	*x = BlockEvent_BlockUpdated{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockEvent_BlockUpdated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockEvent_BlockUpdated) ProtoMessage() {}

func (x *BlockEvent_BlockUpdated) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockEvent_BlockUpdated.ProtoReflect.Descriptor instead.
func (*BlockEvent_BlockUpdated) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{5, 2}
}

func (x *BlockEvent_BlockUpdated) GetBlockType() string {
	if x != nil {
		return x.BlockType
	}
	return ""
}

func (x *BlockEvent_BlockUpdated) GetLayer() string {
	if x != nil {
		return x.Layer
	}
	return ""
}

func (x *BlockEvent_BlockUpdated) GetOldMetadata() map[string]string {
	if x != nil {
		return x.OldMetadata
	}
	return nil
}

func (x *BlockEvent_BlockUpdated) GetNewMetadata() map[string]string {
	if x != nil {
		return x.NewMetadata
	}
	return nil
}

type ChatEvent_MessageSent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	MessageType   string                 `protobuf:"bytes,2,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"` // public, private, system
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatEvent_MessageSent) Reset() {
	*x = ChatEvent_MessageSent{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatEvent_MessageSent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatEvent_MessageSent) ProtoMessage() {}

func (x *ChatEvent_MessageSent) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatEvent_MessageSent.ProtoReflect.Descriptor instead.
func (*ChatEvent_MessageSent) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ChatEvent_MessageSent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatEvent_MessageSent) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

type ChatEvent_PlayerJoined struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerName    string                 `protobuf:"bytes,1,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatEvent_PlayerJoined) Reset() {
	*x = ChatEvent_PlayerJoined{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatEvent_PlayerJoined) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatEvent_PlayerJoined) ProtoMessage() {}

func (x *ChatEvent_PlayerJoined) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatEvent_PlayerJoined.ProtoReflect.Descriptor instead.
func (*ChatEvent_PlayerJoined) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{6, 1}
}

func (x *ChatEvent_PlayerJoined) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

type ChatEvent_PlayerLeft struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerName    string                 `protobuf:"bytes,1,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatEvent_PlayerLeft) Reset() {
	*x = ChatEvent_PlayerLeft{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatEvent_PlayerLeft) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatEvent_PlayerLeft) ProtoMessage() {}

func (x *ChatEvent_PlayerLeft) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatEvent_PlayerLeft.ProtoReflect.Descriptor instead.
func (*ChatEvent_PlayerLeft) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{6, 2}
}

func (x *ChatEvent_PlayerLeft) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ChatEvent_PlayerLeft) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type SystemEvent_ServiceStarted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Config        map[string]string      `protobuf:"bytes,3,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemEvent_ServiceStarted) Reset() {
	*x = SystemEvent_ServiceStarted{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemEvent_ServiceStarted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemEvent_ServiceStarted) ProtoMessage() {}

func (x *SystemEvent_ServiceStarted) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemEvent_ServiceStarted.ProtoReflect.Descriptor instead.
func (*SystemEvent_ServiceStarted) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{7, 0}
}

func (x *SystemEvent_ServiceStarted) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *SystemEvent_ServiceStarted) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SystemEvent_ServiceStarted) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

type SystemEvent_ServiceStopped struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServiceName   string                 `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	UptimeSeconds int64                  `protobuf:"varint,3,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemEvent_ServiceStopped) Reset() {
	*x = SystemEvent_ServiceStopped{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemEvent_ServiceStopped) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemEvent_ServiceStopped) ProtoMessage() {}

func (x *SystemEvent_ServiceStopped) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemEvent_ServiceStopped.ProtoReflect.Descriptor instead.
func (*SystemEvent_ServiceStopped) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{7, 1}
}

func (x *SystemEvent_ServiceStopped) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *SystemEvent_ServiceStopped) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *SystemEvent_ServiceStopped) GetUptimeSeconds() int64 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

type SystemEvent_ErrorOccurred struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorMessage  string                 `protobuf:"bytes,1,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	StackTrace    string                 `protobuf:"bytes,2,opt,name=stack_trace,json=stackTrace,proto3" json:"stack_trace,omitempty"`
	Context       map[string]string      `protobuf:"bytes,3,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemEvent_ErrorOccurred) Reset() {
	*x = SystemEvent_ErrorOccurred{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemEvent_ErrorOccurred) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemEvent_ErrorOccurred) ProtoMessage() {}

func (x *SystemEvent_ErrorOccurred) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemEvent_ErrorOccurred.ProtoReflect.Descriptor instead.
func (*SystemEvent_ErrorOccurred) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{7, 2}
}

func (x *SystemEvent_ErrorOccurred) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *SystemEvent_ErrorOccurred) GetStackTrace() string {
	if x != nil {
		return x.StackTrace
	}
	return ""
}

func (x *SystemEvent_ErrorOccurred) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

type SystemEvent_MetricReported struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MetricName    string                 `protobuf:"bytes,1,opt,name=metric_name,json=metricName,proto3" json:"metric_name,omitempty"`
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemEvent_MetricReported) Reset() {
	*x = SystemEvent_MetricReported{}
	mi := &file_internal_protocol_proto_events_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemEvent_MetricReported) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemEvent_MetricReported) ProtoMessage() {}

func (x *SystemEvent_MetricReported) ProtoReflect() protoreflect.Message {
	mi := &file_internal_protocol_proto_events_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemEvent_MetricReported.ProtoReflect.Descriptor instead.
func (*SystemEvent_MetricReported) Descriptor() ([]byte, []int) {
	return file_internal_protocol_proto_events_proto_rawDescGZIP(), []int{7, 3}
}

func (x *SystemEvent_MetricReported) GetMetricName() string {
	if x != nil {
		return x.MetricName
	}
	return ""
}

func (x *SystemEvent_MetricReported) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *SystemEvent_MetricReported) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

var File_internal_protocol_proto_events_proto protoreflect.FileDescriptor

const file_internal_protocol_proto_events_proto_rawDesc = "" +
	"\n" +
	"$internal/protocol/proto/events.proto\x12\x06events\x1a\x1fgoogle/protobuf/timestamp.proto\x1a$internal/protocol/proto/common.proto\")\n" +
	"\vChunkCoords\x12\f\n" +
	"\x01x\x18\x01 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x05R\x01y\"7\n" +
	"\vBlockCoords\x12\f\n" +
	"\x01x\x18\x01 \x01(\x05R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x05R\x01y\x12\f\n" +
	"\x01z\x18\x03 \x01(\x05R\x01z\"I\n" +
	"\vEventSchema\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x05R\aversion\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\"\xcd\x03\n" +
	"\rEventEnvelope\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1b\n" +
	"\tregion_id\x18\x04 \x01(\tR\bregionId\x12\x1f\n" +
	"\vsource_node\x18\x05 \x01(\tR\n" +
	"sourceNode\x12%\n" +
	"\x0eschema_version\x18\x06 \x01(\x05R\rschemaVersion\x125\n" +
	"\vworld_event\x18\n" +
	" \x01(\v2\x12.events.WorldEventH\x00R\n" +
	"worldEvent\x125\n" +
	"\vblock_event\x18\v \x01(\v2\x12.events.BlockEventH\x00R\n" +
	"blockEvent\x122\n" +
	"\n" +
	"chat_event\x18\f \x01(\v2\x11.events.ChatEventH\x00R\tchatEvent\x128\n" +
	"\fsystem_event\x18\r \x01(\v2\x13.events.SystemEventH\x00R\vsystemEventB\a\n" +
	"\x05event\"\xa4\x04\n" +
	"\n" +
	"WorldEvent\x12\x19\n" +
	"\bworld_id\x18\x01 \x01(\tR\aworldId\x12C\n" +
	"\fchunk_loaded\x18\n" +
	" \x01(\v2\x1e.events.WorldEvent.ChunkLoadedH\x00R\vchunkLoaded\x12I\n" +
	"\x0echunk_unloaded\x18\v \x01(\v2 .events.WorldEvent.ChunkUnloadedH\x00R\rchunkUnloaded\x12V\n" +
	"\x13world_state_changed\x18\f \x01(\v2$.events.WorldEvent.WorldStateChangedH\x00R\x11worldStateChanged\x1a[\n" +
	"\vChunkLoaded\x12+\n" +
	"\x06coords\x18\x01 \x01(\v2\x13.events.ChunkCoordsR\x06coords\x12\x1f\n" +
	"\vblock_count\x18\x02 \x01(\x05R\n" +
	"blockCount\x1aT\n" +
	"\rChunkUnloaded\x12+\n" +
	"\x06coords\x18\x01 \x01(\v2\x13.events.ChunkCoordsR\x06coords\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x1aP\n" +
	"\x11WorldStateChanged\x12\x14\n" +
	"\x05state\x18\x01 \x01(\tR\x05state\x12%\n" +
	"\x0eprevious_state\x18\x02 \x01(\tR\rpreviousStateB\x0e\n" +
	"\fworld_action\"\xdd\a\n" +
	"\n" +
	"BlockEvent\x12+\n" +
	"\x06coords\x18\x01 \x01(\v2\x13.events.BlockCoordsR\x06coords\x12\x1b\n" +
	"\tplayer_id\x18\x02 \x01(\tR\bplayerId\x12C\n" +
	"\fblock_placed\x18\n" +
	" \x01(\v2\x1e.events.BlockEvent.BlockPlacedH\x00R\vblockPlaced\x12C\n" +
	"\fblock_broken\x18\v \x01(\v2\x1e.events.BlockEvent.BlockBrokenH\x00R\vblockBroken\x12F\n" +
	"\rblock_updated\x18\f \x01(\v2\x1f.events.BlockEvent.BlockUpdatedH\x00R\fblockUpdated\x1a\xc9\x01\n" +
	"\vBlockPlaced\x12\x1d\n" +
	"\n" +
	"block_type\x18\x01 \x01(\tR\tblockType\x12\x14\n" +
	"\x05layer\x18\x02 \x01(\tR\x05layer\x12H\n" +
	"\bmetadata\x18\x03 \x03(\v2,.events.BlockEvent.BlockPlaced.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1ag\n" +
	"\vBlockBroken\x12\x1d\n" +
	"\n" +
	"block_type\x18\x01 \x01(\tR\tblockType\x12\x14\n" +
	"\x05layer\x18\x02 \x01(\tR\x05layer\x12#\n" +
	"\rdropped_items\x18\x03 \x01(\bR\fdroppedItems\x1a\xed\x02\n" +
	"\fBlockUpdated\x12\x1d\n" +
	"\n" +
	"block_type\x18\x01 \x01(\tR\tblockType\x12\x14\n" +
	"\x05layer\x18\x02 \x01(\tR\x05layer\x12S\n" +
	"\fold_metadata\x18\x03 \x03(\v20.events.BlockEvent.BlockUpdated.OldMetadataEntryR\voldMetadata\x12S\n" +
	"\fnew_metadata\x18\x04 \x03(\v20.events.BlockEvent.BlockUpdated.NewMetadataEntryR\vnewMetadata\x1a>\n" +
	"\x10OldMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10NewMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x0e\n" +
	"\fblock_action\"\xe1\x03\n" +
	"\tChatEvent\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x18\n" +
	"\achannel\x18\x02 \x01(\tR\achannel\x12B\n" +
	"\fmessage_sent\x18\n" +
	" \x01(\v2\x1d.events.ChatEvent.MessageSentH\x00R\vmessageSent\x12E\n" +
	"\rplayer_joined\x18\v \x01(\v2\x1e.events.ChatEvent.PlayerJoinedH\x00R\fplayerJoined\x12?\n" +
	"\vplayer_left\x18\f \x01(\v2\x1c.events.ChatEvent.PlayerLeftH\x00R\n" +
	"playerLeft\x1aJ\n" +
	"\vMessageSent\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12!\n" +
	"\fmessage_type\x18\x02 \x01(\tR\vmessageType\x1a/\n" +
	"\fPlayerJoined\x12\x1f\n" +
	"\vplayer_name\x18\x01 \x01(\tR\n" +
	"playerName\x1aE\n" +
	"\n" +
	"PlayerLeft\x12\x1f\n" +
	"\vplayer_name\x18\x01 \x01(\tR\n" +
	"playerName\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reasonB\r\n" +
	"\vchat_action\"\xfd\b\n" +
	"\vSystemEvent\x12\x1c\n" +
	"\tcomponent\x18\x01 \x01(\tR\tcomponent\x12\x14\n" +
	"\x05level\x18\x02 \x01(\tR\x05level\x12M\n" +
	"\x0fservice_started\x18\n" +
	" \x01(\v2\".events.SystemEvent.ServiceStartedH\x00R\x0eserviceStarted\x12M\n" +
	"\x0fservice_stopped\x18\v \x01(\v2\".events.SystemEvent.ServiceStoppedH\x00R\x0eserviceStopped\x12J\n" +
	"\x0eerror_occurred\x18\f \x01(\v2!.events.SystemEvent.ErrorOccurredH\x00R\rerrorOccurred\x12M\n" +
	"\x0fmetric_reported\x18\r \x01(\v2\".events.SystemEvent.MetricReportedH\x00R\x0emetricReported\x1a\xd0\x01\n" +
	"\x0eServiceStarted\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12F\n" +
	"\x06config\x18\x03 \x03(\v2..events.SystemEvent.ServiceStarted.ConfigEntryR\x06config\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1ar\n" +
	"\x0eServiceStopped\x12!\n" +
	"\fservice_name\x18\x01 \x01(\tR\vserviceName\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\x12%\n" +
	"\x0euptime_seconds\x18\x03 \x01(\x03R\ruptimeSeconds\x1a\xdb\x01\n" +
	"\rErrorOccurred\x12#\n" +
	"\rerror_message\x18\x01 \x01(\tR\ferrorMessage\x12\x1f\n" +
	"\vstack_trace\x18\x02 \x01(\tR\n" +
	"stackTrace\x12H\n" +
	"\acontext\x18\x03 \x03(\v2..events.SystemEvent.ErrorOccurred.ContextEntryR\acontext\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a\xca\x01\n" +
	"\x0eMetricReported\x12\x1f\n" +
	"\vmetric_name\x18\x01 \x01(\tR\n" +
	"metricName\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value\x12F\n" +
	"\x06labels\x18\x03 \x03(\v2..events.SystemEvent.MetricReported.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x0f\n" +
	"\rsystem_actionB5Z3github.com/annel0/mmo-game/internal/protocol/eventsb\x06proto3"

var (
	file_internal_protocol_proto_events_proto_rawDescOnce sync.Once
	file_internal_protocol_proto_events_proto_rawDescData []byte
)

func file_internal_protocol_proto_events_proto_rawDescGZIP() []byte {
	file_internal_protocol_proto_events_proto_rawDescOnce.Do(func() {
		file_internal_protocol_proto_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_internal_protocol_proto_events_proto_rawDesc), len(file_internal_protocol_proto_events_proto_rawDesc)))
	})
	return file_internal_protocol_proto_events_proto_rawDescData
}

var file_internal_protocol_proto_events_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_internal_protocol_proto_events_proto_goTypes = []any{
	(*ChunkCoords)(nil),                  // 0: events.ChunkCoords
	(*BlockCoords)(nil),                  // 1: events.BlockCoords
	(*EventSchema)(nil),                  // 2: events.EventSchema
	(*EventEnvelope)(nil),                // 3: events.EventEnvelope
	(*WorldEvent)(nil),                   // 4: events.WorldEvent
	(*BlockEvent)(nil),                   // 5: events.BlockEvent
	(*ChatEvent)(nil),                    // 6: events.ChatEvent
	(*SystemEvent)(nil),                  // 7: events.SystemEvent
	(*WorldEvent_ChunkLoaded)(nil),       // 8: events.WorldEvent.ChunkLoaded
	(*WorldEvent_ChunkUnloaded)(nil),     // 9: events.WorldEvent.ChunkUnloaded
	(*WorldEvent_WorldStateChanged)(nil), // 10: events.WorldEvent.WorldStateChanged
	(*BlockEvent_BlockPlaced)(nil),       // 11: events.BlockEvent.BlockPlaced
	(*BlockEvent_BlockBroken)(nil),       // 12: events.BlockEvent.BlockBroken
	(*BlockEvent_BlockUpdated)(nil),      // 13: events.BlockEvent.BlockUpdated
	nil,                                  // 14: events.BlockEvent.BlockPlaced.MetadataEntry
	nil,                                  // 15: events.BlockEvent.BlockUpdated.OldMetadataEntry
	nil,                                  // 16: events.BlockEvent.BlockUpdated.NewMetadataEntry
	(*ChatEvent_MessageSent)(nil),        // 17: events.ChatEvent.MessageSent
	(*ChatEvent_PlayerJoined)(nil),       // 18: events.ChatEvent.PlayerJoined
	(*ChatEvent_PlayerLeft)(nil),         // 19: events.ChatEvent.PlayerLeft
	(*SystemEvent_ServiceStarted)(nil),   // 20: events.SystemEvent.ServiceStarted
	(*SystemEvent_ServiceStopped)(nil),   // 21: events.SystemEvent.ServiceStopped
	(*SystemEvent_ErrorOccurred)(nil),    // 22: events.SystemEvent.ErrorOccurred
	(*SystemEvent_MetricReported)(nil),   // 23: events.SystemEvent.MetricReported
	nil,                                  // 24: events.SystemEvent.ServiceStarted.ConfigEntry
	nil,                                  // 25: events.SystemEvent.ErrorOccurred.ContextEntry
	nil,                                  // 26: events.SystemEvent.MetricReported.LabelsEntry
	(*timestamppb.Timestamp)(nil),        // 27: google.protobuf.Timestamp
}
var file_internal_protocol_proto_events_proto_depIdxs = []int32{
	27, // 0: events.EventEnvelope.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 1: events.EventEnvelope.world_event:type_name -> events.WorldEvent
	5,  // 2: events.EventEnvelope.block_event:type_name -> events.BlockEvent
	6,  // 3: events.EventEnvelope.chat_event:type_name -> events.ChatEvent
	7,  // 4: events.EventEnvelope.system_event:type_name -> events.SystemEvent
	8,  // 5: events.WorldEvent.chunk_loaded:type_name -> events.WorldEvent.ChunkLoaded
	9,  // 6: events.WorldEvent.chunk_unloaded:type_name -> events.WorldEvent.ChunkUnloaded
	10, // 7: events.WorldEvent.world_state_changed:type_name -> events.WorldEvent.WorldStateChanged
	1,  // 8: events.BlockEvent.coords:type_name -> events.BlockCoords
	11, // 9: events.BlockEvent.block_placed:type_name -> events.BlockEvent.BlockPlaced
	12, // 10: events.BlockEvent.block_broken:type_name -> events.BlockEvent.BlockBroken
	13, // 11: events.BlockEvent.block_updated:type_name -> events.BlockEvent.BlockUpdated
	17, // 12: events.ChatEvent.message_sent:type_name -> events.ChatEvent.MessageSent
	18, // 13: events.ChatEvent.player_joined:type_name -> events.ChatEvent.PlayerJoined
	19, // 14: events.ChatEvent.player_left:type_name -> events.ChatEvent.PlayerLeft
	20, // 15: events.SystemEvent.service_started:type_name -> events.SystemEvent.ServiceStarted
	21, // 16: events.SystemEvent.service_stopped:type_name -> events.SystemEvent.ServiceStopped
	22, // 17: events.SystemEvent.error_occurred:type_name -> events.SystemEvent.ErrorOccurred
	23, // 18: events.SystemEvent.metric_reported:type_name -> events.SystemEvent.MetricReported
	0,  // 19: events.WorldEvent.ChunkLoaded.coords:type_name -> events.ChunkCoords
	0,  // 20: events.WorldEvent.ChunkUnloaded.coords:type_name -> events.ChunkCoords
	14, // 21: events.BlockEvent.BlockPlaced.metadata:type_name -> events.BlockEvent.BlockPlaced.MetadataEntry
	15, // 22: events.BlockEvent.BlockUpdated.old_metadata:type_name -> events.BlockEvent.BlockUpdated.OldMetadataEntry
	16, // 23: events.BlockEvent.BlockUpdated.new_metadata:type_name -> events.BlockEvent.BlockUpdated.NewMetadataEntry
	24, // 24: events.SystemEvent.ServiceStarted.config:type_name -> events.SystemEvent.ServiceStarted.ConfigEntry
	25, // 25: events.SystemEvent.ErrorOccurred.context:type_name -> events.SystemEvent.ErrorOccurred.ContextEntry
	26, // 26: events.SystemEvent.MetricReported.labels:type_name -> events.SystemEvent.MetricReported.LabelsEntry
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_internal_protocol_proto_events_proto_init() }
func file_internal_protocol_proto_events_proto_init() {
	if File_internal_protocol_proto_events_proto != nil {
		return
	}
	file_internal_protocol_proto_events_proto_msgTypes[3].OneofWrappers = []any{
		(*EventEnvelope_WorldEvent)(nil),
		(*EventEnvelope_BlockEvent)(nil),
		(*EventEnvelope_ChatEvent)(nil),
		(*EventEnvelope_SystemEvent)(nil),
	}
	file_internal_protocol_proto_events_proto_msgTypes[4].OneofWrappers = []any{
		(*WorldEvent_ChunkLoaded_)(nil),
		(*WorldEvent_ChunkUnloaded_)(nil),
		(*WorldEvent_WorldStateChanged_)(nil),
	}
	file_internal_protocol_proto_events_proto_msgTypes[5].OneofWrappers = []any{
		(*BlockEvent_BlockPlaced_)(nil),
		(*BlockEvent_BlockBroken_)(nil),
		(*BlockEvent_BlockUpdated_)(nil),
	}
	file_internal_protocol_proto_events_proto_msgTypes[6].OneofWrappers = []any{
		(*ChatEvent_MessageSent_)(nil),
		(*ChatEvent_PlayerJoined_)(nil),
		(*ChatEvent_PlayerLeft_)(nil),
	}
	file_internal_protocol_proto_events_proto_msgTypes[7].OneofWrappers = []any{
		(*SystemEvent_ServiceStarted_)(nil),
		(*SystemEvent_ServiceStopped_)(nil),
		(*SystemEvent_ErrorOccurred_)(nil),
		(*SystemEvent_MetricReported_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_internal_protocol_proto_events_proto_rawDesc), len(file_internal_protocol_proto_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_protocol_proto_events_proto_goTypes,
		DependencyIndexes: file_internal_protocol_proto_events_proto_depIdxs,
		MessageInfos:      file_internal_protocol_proto_events_proto_msgTypes,
	}.Build()
	File_internal_protocol_proto_events_proto = out.File
	file_internal_protocol_proto_events_proto_goTypes = nil
	file_internal_protocol_proto_events_proto_depIdxs = nil
}
